apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: kube-prometheus-stack
  namespace: argocd
  finalizers:
  - resources-finalizer.argocd.argoproj.io
spec:
  project: default
  source:
    chart: kube-prometheus-stack
    repoURL: https://prometheus-community.github.io/helm-charts
    targetRevision: 71.0.0
    helm:
      valuesObject:
        kubeEtcd:
          service:
            selector:
              component: kube-apiserver # etcd runs on control plane nodes
        kubeProxy:
          enabled: false
        alertmanager:
          alertmanagerSpec:
            storage:
              volumeClaimTemplate:
                spec:
                  storageClassName: ceph-block
                  resources:
                    requests:
                      storage: 1Gi
        prometheus:
          prometheusSpec:
            ruleSelectorNilUsesHelmValues: false
            serviceMonitorSelectorNilUsesHelmValues: false
            podMonitorSelectorNilUsesHelmValues: false
            probeSelectorNilUsesHelmValues: false
            scrapeConfigSelectorNilUsesHelmValues: false
            enableAdminAPI: true
            walCompression: true
            enableFeatures:
              - memory-snapshot-on-shutdown
            retention: 14d
            retentionSize: 50GB
            storageSpec:
              volumeClaimTemplate:
                spec:
                  storageClassName: ceph-block
                  resources:
                    requests:
                      storage: 50Gi
        prometheus-node-exporter:
          fullnameOverride: node-exporter
          prometheus: &prometheus
            monitor:
              enabled: true
              relabelings:
                - action: replace
                  regex: (.*)
                  replacement: $1
                  sourceLabels:
                    - __meta_kubernetes_pod_node_name
                  targetLabel: kubernetes_node
        kube-state-metrics:
          fullnameOverride: kube-state-metrics
          metricLabelsAllowlist:
            - pods=[*]
            - deployments=[*]
            - persistentvolumeclaims=[*]
          prometheus:
            <<: *prometheus
        grafana:
          ingress:
            enabled: true
            ingressClassName: kong
            annotations:
              cert-manager.io/cluster-issuer: letsencrypt-prod
            hosts:
            - &host grafana.k8s-01.suslian.engineer
            tls:
            - secretName: grafana-ingress-tls
              hosts: 
              - *host
  destination:
    name: in-cluster
    namespace: monitoring
  syncPolicy:
    syncOptions:
    - CreateNamespace=true
